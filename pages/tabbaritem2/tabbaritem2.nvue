<template>
	<view class="parent">
		<view class="head">
			<view class="content">
				<view class="time-background" @click="onTimeClick()">
					<text class="time">发布时间</text>
					<image class="time-arrow" mode="aspectFit" src="/static/images/category_arrow1.png"></image>
				</view>
				<view class="filter-background" @click="onFilterClick()">
					<text class="filter">筛选</text>
					<image class="filter-arrow" mode="aspectFit" src="/static/images/category_arrow2.png"></image>
				</view>
			</view>
			<line class="line"></line>
		</view>
		<list-refresh class="list" ref="list" :lists="lists" :hasMoreData="hasMoreData" @refreshData="refreshData">
			<cell v-for="(item, index) in lists" :key="item">
				<category-item :item="item" @click="onCellClick(item)"></category-item>
			</cell>
		</list-refresh>
	</view>
</template>

<script>
	import line from '../../components/line/line.vue'
	import list from '../components/list-refresh/list-refresh.nvue'
	import cell from '../../components/category-item/category-item.vue'

	export default {
		components: {
			line,
			list,
			cell
		},
		data() {
			return {
				hasMoreData: true,
				lists: []
			}
		},
		onLoad: function(options) {
			this.listingList(true, 0, getApp().globalData.take)
		},
		methods: {
			refreshData(e) {
				console.log(e)
				this.listingList(e.isRefresh, e.skip, e.take)
			},
			listingList(isRefresh, skip, take) {
				getApp().globalData.request.apis.listingList({
					"skip": skip,
					"take": take
				}).then((res) => {
					if (res.code == 1) {
						this.hasMoreData = (res.data.length >= take)
						if (isRefresh) {
							this.lists = res.data
						} else {
							this.lists = this.lists.concat(res.data)
						}
						this.loadDataFinish(true)
					} else {
						this.loadDataFinish(false)
					}
				})
			},
			loadDataFinish(success) {
				this.$refs.list.loadDataFinish(success)
			},
			onTimeClick() {
				console.log("onTimeClick")
			},
			onFilterClick() {
				console.log("onFilterClick")
			},
			onCellClick(item) {
				console.log("onCellClick")
			}
		}
	}
</script>

<style>
	.parent {
		flex: 1;
		flex-direction: column;
		overflow: hidden;
	}

	.head {
		background-color: #FFFFFF;
		flex-direction: column;
	}

	.content {
		flex-direction: row;
		height: 80rpx;
	}

	.time-background {
		flex: 1;
		flex-direction: row;
		align-items: center;
		justify-content: center;
	}

	.filter-background {
		flex: 1;
		flex-direction: row;
		align-items: center;
		justify-content: center;
	}

	.time {
		color: #FF7519;
		font-size: 13sp;
		margin-right: 10rpx;
	}

	.filter {
		color: #3F536E;
		font-size: 13sp;
		margin-right: 10rpx;
	}

	.time-arrow {
		width: 14rpx;
		height: 12rpx;
		justify-content: center;
	}

	.filter-arrow {
		width: 14rpx;
		height: 12rpx;
		justify-content: center;
	}
</style>
