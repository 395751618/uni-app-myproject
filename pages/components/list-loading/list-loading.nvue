<template>
	<view class="parent">
		<list class="list">
			<refresh class="refresh" :display="refreshing ? 'show' : 'hide'" @refresh="onRefresh()" @pullingdown="onPullingDown">
			    <text class="refresh-text">{{refreshText}}</text>
				<loading-indicator></loading-indicator>
			</refresh>
			<slot></slot>
			<loading class="loading" :display="loading ? 'show' : 'hide'" @loading="onLoadMore" @pullingup="onPullUp">
				<text class="load-more-text">{{loadMoreText}}</text>
			</loading>
		  </list>
	</view>
</template>

<script>
	export default {
		props: {
			hasMoreData: {
				type: Boolean,
				default: false
			}
		},
		data() {
			return {
				refreshing: false,
				refreshText: "",
				loading: false,
				loadMoreText: "正在加载更多...",
				skip: 0,
				take: getApp().globalData.take
			}
		},
		methods: {
			loadDataFinish(success) {
				if (this.refreshing) {
					this.refreshing = false
					this.refreshText = (success ? "已刷新" : "刷新失败")
					return
				}
				if (this.loading) {
					this.loading = false
					this.loadMoreText = (success ? "已加载" : "加载失败")
					this.skip = (success ? this.skip : this.skip - 1)
					return
				}
			},
			loadMoreData() {
				this.skip += 1
				this.$emit("refreshData", {"isRefresh": false, "skip": this.skip, "take": this.take})
			},
			onLoadMore() {
				if (this.hasMoreData) {
					this.loading = true
					this.loadMoreText = "正在加载更多..."
					this.loadMoreData()
					return
				}
			},
			onPullUp(e) {
				if (this.refreshing || this.loading) {
				    return
				}
				if (Math.abs(e.pullingDistance) > Math.abs(e.viewHeight)) {
				    this.loadMoreText = "释放立即加载更多";
				} else {
				    this.loadMoreText = "上拉可以加载更多";
				}
			},
			refreshData() {
				this.skip = 0
				this.$emit("refreshData", {"isRefresh": true, "skip": this.skip, "take": this.take})
			},
			onRefresh() {
				this.refreshing = true
				this.refreshText = "正在刷新..."
				this.refreshData()
			},
			onPullingDown(e) {
				if (this.refreshing || this.loading) {
				    return
				}
				if (Math.abs(e.pullingDistance) > Math.abs(e.viewHeight)) {
				    this.refreshText = "释放立即刷新";
				} else {
				    this.refreshText = "下拉可以刷新";
				}
			}
		}
	}
</script>

<style>
	.parent {
		flex: 1;
		flex-direction: column;
		overflow: hidden;
	}
	.refresh {
	    text-align: center;
	    height: 64px;
	    justify-content: center;
	}
	.refresh-text {
		text-align: center;
		justify-content: center;
		font-size: 15sp;
	}
	.loading {
		text-align: center;
		height: 45px;
		justify-content: center;
	}
	.load-more-text {
		text-align: center;
		justify-content: center;
		font-size: 15sp;
	}
</style>

