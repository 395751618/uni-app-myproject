<template>
	<view class="parent">
		<list class="list">
			<refresh class="refresh" :display="refreshing ? 'show' : 'hide'" @refresh="onRefresh()" @pullingdown="onPullingDown">
			    <text class="refresh-text">{{refreshText}}</text>
				<loading-indicator></loading-indicator>
			</refresh>
			<slot></slot>
		  </list>
	</view>
</template>

<script>
	export default {
		props: {
			hasMoreData: {
				type: Boolean,
				default: true
			}
		},
		data() {
			return {
				refreshing: false,
				pulling: false,
				refreshText: "",
				skip: 0,
				take: getApp().globalData.take
			}
		},
		methods: {
			loadDataFinish() {
				this.pulling = false;
				this.refreshing = false;
				this.refreshText = "已刷新";
			},
			refreshData() {
				this.$emit("refreshData", {"isRefresh": true, "skip": this.skip, "take": this.take})
			},
			loadMoreData() {
				this.$emit("refreshData", {"isRefresh": false, "skip": this.skip, "take": this.take})
			},
			onRefresh() {
				console.log('onRefresh')
				this.refreshing = true;
				this.refreshText = "正在刷新...";
				this.refreshData();
			},
			onPullingDown(e) {
				console.log('onPullingDown')
				if (this.refreshing || this.pulling) {
				    return;
				}
				if (Math.abs(e.pullingDistance) > Math.abs(e.viewHeight)) {
				    this.refreshText = "释放立即刷新";
				} else {
				    this.refreshText = "下拉可以刷新";
				}
			}
		}
	}
</script>

<style>
	.parent {
		flex: 1;
		flex-direction: column;
		overflow: hidden;
	}
	.refresh {
	    text-align: center;
	    height: 64px;
	    justify-content: center;
	}
	.refresh-text {
		text-align: center;
		justify-content: center;
		font-size: 15sp;
	}
</style>
